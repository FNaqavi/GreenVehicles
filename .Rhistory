install.packages(tidyverse)
install.packages(dplyr)
install.packages(tidyverse)
install.packages(tidyverse)
setwd("C:/Users/naqavi/OneDrive - KTH/!Joel/Passages/GreenVehicles")
library(tidyverse, magrittr, lubridate)
# Compute nominal charges
passages$DoW <- as.factor(weekdays(as.Date(passages$Passagedatum)))
passages <- passages %>%
mutate(PassageDT = lubridate::ymd_hms(paste0(passages$Passagedatum, " ", passages$Passagetid)))
passages <- passages %>%
mutate(PassageTime = lubridate::hms(passages$Passagetid))
passages$price <- 0
passages$price[passages$PassageTime >= lubridate::hms("06:30:00") & passages$PassageTime < lubridate::hms("07:00:00")] <- 10
passages$price[passages$PassageTime >= lubridate::hms("07:00:00") & passages$PassageTime < lubridate::hms("07:30:00")] <- 15
passages$price[passages$PassageTime >= lubridate::hms("07:30:00") & passages$PassageTime < lubridate::hms("08:30:00")] <- 20
passages$price[passages$PassageTime >= lubridate::hms("08:30:00") & passages$PassageTime < lubridate::hms("09:00:00")] <- 15
passages$price[passages$PassageTime >= lubridate::hms("09:00:00") & passages$PassageTime < lubridate::hms("15:30:00")] <- 10
passages$price[passages$PassageTime >= lubridate::hms("15:30:00") & passages$PassageTime < lubridate::hms("16:00:00")] <- 15
passages$price[passages$PassageTime >= lubridate::hms("16:00:00") & passages$PassageTime < lubridate::hms("17:30:00")] <- 20
passages$price[passages$PassageTime >= lubridate::hms("17:30:00") & passages$PassageTime < lubridate::hms("18:00:00")] <- 15
passages$price[passages$PassageTime >= lubridate::hms("18:00:00") & passages$PassageTime < lubridate::hms("18:30:00")] <- 10
passages$PassageTime <- NULL
# Since 2013 observations only seem to exist during charging periods, filter out
# the same for 2012.
passages <- passages %>%
filter(passages$price > 0)
# Extract vehicle-specific information
vehicles <- passages %>%
group_by(AnonymRegno) %>%
summarize(Juridisk.eller.fysisk = first(Juridisk.eller.fysisk),
Ny.ägare.mellan.period.1.och.2 = first(Ny.ägare.mellan.period.1.och.2),
Drivmedel.1 = first(Drivmedel.1),
Drivmedel.2 = first(Drivmedel.2),
C02.Driv.1 = first(C02.Driv.1),
C02.Driv.2 = first(C02.Driv.2),
Ägare.postnr = first(Ägare.postnr),
Ägare.ort = first(Ägare.ort),
Drivmedel = first(Drivmedel),
FuelCat = first(FuelCat),
Ort = first(Ort),
Kommun = first(Kommun),
expgrp = first(expgrp))
# Also create the first long vehicles table (separate rows for each Year)
veh.year.12 <- vehicles %>%
mutate(Year=2012)
veh.year.13 <- vehicles %>%
mutate(Year=2013)
veh.year <- rbind(veh.year.12, veh.year.13)
# relabel experimental group variable
levels(vehicles$expgrp) <- c("Paying in 2012","Exempt in 2012")
levels(veh.year$expgrp) <- c("Paying in 2012","Exempt in 2012")
# Aggregate passages to unique vehicles
pass.trips.2012 <- passages %>%
dplyr::filter(Year == 2012) %>%
group_by(AnonymRegno) %>%
summarize(totalprice.12 = sum(price))
pass.trips.2013 <- passages %>%
dplyr::filter(Year == 2013) %>%
group_by(AnonymRegno) %>%
summarize(totalprice.13 = sum(price))
#Alternatively,...
pass.trips <- passages %>%
group_by(AnonymRegno, Year) %>%
summarize(totalprice = sum(price))
# Merge back into vehicles
vehicles <- vehicles %>%
full_join(pass.trips.2012, by="AnonymRegno")
vehicles <- vehicles %>%
full_join(pass.trips.2013, by="AnonymRegno")
# Alternatively,
veh.year <- veh.year %>%
full_join(pass.trips, by=c("AnonymRegno","Year"))
# Set NAs in total price to zero
vehicles$totalprice.12[is.na(vehicles$totalprice.12)] <- 0
vehicles$totalprice.13[is.na(vehicles$totalprice.13)] <- 0
veh.year$totalprice[is.na(veh.year$totalprice)] <- 0
# Filter out vehicles that are suspect, put OK data in new df
pass.veh <- vehicles %>%
dplyr::filter(!is.na(vehicles$totalprice.12) & # no observed trips in 2012
!is.na(vehicles$totalprice.13) & # no observed trips in 2013
vehicles$Ny.ägare.mellan.period.1.och.2=="Nej" & # not same owner in 2012 and 2013
vehicles$Juridisk.eller.fysisk=="F" & # not privately owned
!is.na(vehicles$Kommun)) # not registered within Stockholm County
# Same for long table
veh.year <- veh.year %>%
dplyr::filter(!is.na(veh.year$totalprice) &
veh.year$Ny.ägare.mellan.period.1.och.2=="Nej" &
veh.year$Juridisk.eller.fysisk=="F" &
!is.na(veh.year$Kommun))
# Compute change in nominal price
pass.veh$totalprice.diff <- pass.veh$totalprice.13 - pass.veh$totalprice.12
# Do some density plots
# Use a common bandwidth adjustment
bw.adjust <- 2
# Nominal price for 2012/2013, using long table
ggplot(veh.year, aes(totalprice, fill=expgrp)) +
geom_density(alpha=0.5, adjust=bw.adjust) +
xlim(0,600) +
theme(legend.position="top") +
facet_wrap( ~ Year, ncol=2) +
labs(fill="Group",
x="Total Nominal Price of Crossings",
y = "Density")
# Load and organize data files
setwd("C:/Users/naqavi/OneDrive - KTH/!Joel/Passages/GreenVehicles")
library(tidyverse)
library(dplyr)
library(magrittr)
library(forcats)
# Import text files
pass.control.12 <- read.csv("KTH_KontrollGruppPassager_2012.txt", header=TRUE)
pass.control.13 <- read.csv("KTH_KontrollGruppPassager_2013.txt", header=TRUE)
pass.treat.12 <- read.csv("KTH_BehandlingsGruppPassager_2012.txt", header=TRUE)
pass.treat.13 <- read.csv("KTH_BehandlingsGruppPassager_2013.txt", header=TRUE)
# Create Year variable
pass.control.12$Year <- 2012
pass.control.13$Year <- 2013
pass.treat.12$Year <- 2012
pass.treat.13$Year <- 2013
# Create experimental group variable
pass.control.12$expgrp <- "control"
pass.control.13$expgrp <- "control"
pass.treat.12$expgrp <- "treat"
pass.treat.13$expgrp <- "treat"
# Merge datasets
passages <- rbind(pass.control.12, pass.control.13, pass.treat.12, pass.treat.13)
passages$expgrp <- as.factor(passages$expgrp)
# Create unified fuel variable
passages$Drivmedel <- passages$Drivmedel.1
passages$Drivmedel <- paste(passages$Drivmedel.1, passages$Drivmedel.2, sep=".")
passages$Drivmedel <- as.factor(passages$Drivmedel)
passages$Drivmedel <- fct_collapse(passages$Drivmedel,
Petrol = c("Bensin.Okänd"),
Diesel = c("Diesel.Okänd"),
Electric = c("El.Okänd"),
Electric.Hybrid = c("Bensin.El"),
Ethanol = c("Etanol.Okänd","Bensin.Etanol"),
Natural.Gas = c("Bensin.Metangas","Metangas.Metangas","Metangas.Okänd"),
Other = c(".","Motorgas.Okänd"))
passages$FuelCat[passages$Drivmedel %in% c("Electric","Electric.Hybrid","Ethanol","Natural.Gas","Other")] <- "AFV"
passages$FuelCat[passages$Drivmedel %in% c("Petrol","Diesel")] <- "CV"
# Add municipalities to Passages based on localities
passages$Ort <- passages$Ägare.ort
passages$Ort <- trimws(passages$Ort, which="both")
localities <- read.csv("Localities.csv", header=TRUE)
localities$Ort <- toupper(localities$Ort)
localities$Kommun <- toupper(localities$Kommun)
passages <- passages %>%
left_join(localities, by="Ort")
# Import vehicle registry data for 2012
registry.wide <- read.csv("personbilaritrafik.csv", header=TRUE)
# produce long file with total fleet
registry.tot <- registry.wide %>%
dplyr::select(Year, Komkod, Kommun, Bensin, Diesel, El,
Etanol.hybrid, Bensin.El, Gas, Övriga, Totalt, Miljöbil, ee.index, rr.index) %>%
gather(c("Bensin", "Diesel", "El", "Etanol.hybrid",
"Bensin.El","Gas","Övriga","Totalt", "Miljöbil"),
key="Drivmedel", value="tot.veh", na.rm=TRUE)
# produce long file with fleet subset from 2009 onward
registry.f09 <- registry.wide %>%
dplyr::select(Year, Komkod, Kommun, Bensin.from09, Diesel.from09, El.from09,
Etanol.hybrid.from09, Bensin.El.from09, Gas.from09, Övriga.from09, Totalt.from09, Miljöbil.from09) %>%
gather(c("Bensin.from09", "Diesel.from09", "El.from09", "Etanol.hybrid.from09",
"Bensin.El.from09","Gas.from09","Övriga.from09","Totalt.from09", "Miljöbil.from09"),
key="Drivmedel", value="f09.veh", na.rm=TRUE)
# rename fuel types
registry.f09$Drivmedel <- sub(pattern=".from09", replacement="",
x=registry.f09$Drivmedel)
# merge
registry <- registry.tot %>%
left_join(registry.f09, by=c("Year","Komkod","Kommun","Drivmedel"))
#registry$f09.veh[is.na(registry$f09.veh)] <- 0
registry$f09.pv <- registry$f09.veh/registry$tot.veh
registry$t08.pv <- (registry$tot.veh-registry$f09.veh)/registry$tot.veh
#Modify Drivmedel in "registry" to conform to "passages"
registry$Drivmedel <- as.factor(registry$Drivmedel)
registry$Drivmedel <- fct_collapse(registry$Drivmedel,
Petrol = c("Bensin"),
Diesel = c("Diesel"),
Electric = c("El"),
Electric.Hybrid = c("Bensin.El"),
Ethanol = c("Etanol.hybrid"),
Natural.Gas = c("Gas"),
Other = c("Övriga"),
Total = c("Totalt"),
AFV = c("Miljöbil"))
# Get share of clean vehicles pre-2008 for all-county
share.clean.t08 <- weighted.mean(x=registry$t08.pv[registry$Drivmedel=="AFV"],
w=registry$tot.veh[registry$Drivmedel=="AFV"])
share.clean.f09 <- weighted.mean(x=registry$f09.pv[registry$Drivmedel=="AFV"],
w=registry$tot.veh[registry$Drivmedel=="AFV"])
setwd("C:/Users/naqavi/OneDrive - KTH/!Joel/Passages/GreenVehicles")
library(tidyverse, magrittr, lubridate)
# Compute nominal charges
passages$DoW <- as.factor(weekdays(as.Date(passages$Passagedatum)))
passages <- passages %>%
mutate(PassageDT = lubridate::ymd_hms(paste0(passages$Passagedatum, " ", passages$Passagetid)))
passages <- passages %>%
mutate(PassageTime = lubridate::hms(passages$Passagetid))
passages$price <- 0
passages$price[passages$PassageTime >= lubridate::hms("06:30:00") & passages$PassageTime < lubridate::hms("07:00:00")] <- 10
passages$price[passages$PassageTime >= lubridate::hms("07:00:00") & passages$PassageTime < lubridate::hms("07:30:00")] <- 15
passages$price[passages$PassageTime >= lubridate::hms("07:30:00") & passages$PassageTime < lubridate::hms("08:30:00")] <- 20
passages$price[passages$PassageTime >= lubridate::hms("08:30:00") & passages$PassageTime < lubridate::hms("09:00:00")] <- 15
passages$price[passages$PassageTime >= lubridate::hms("09:00:00") & passages$PassageTime < lubridate::hms("15:30:00")] <- 10
passages$price[passages$PassageTime >= lubridate::hms("15:30:00") & passages$PassageTime < lubridate::hms("16:00:00")] <- 15
passages$price[passages$PassageTime >= lubridate::hms("16:00:00") & passages$PassageTime < lubridate::hms("17:30:00")] <- 20
passages$price[passages$PassageTime >= lubridate::hms("17:30:00") & passages$PassageTime < lubridate::hms("18:00:00")] <- 15
passages$price[passages$PassageTime >= lubridate::hms("18:00:00") & passages$PassageTime < lubridate::hms("18:30:00")] <- 10
passages$PassageTime <- NULL
# Since 2013 observations only seem to exist during charging periods, filter out
# the same for 2012.
passages <- passages %>%
filter(passages$price > 0)
# Extract vehicle-specific information
vehicles <- passages %>%
group_by(AnonymRegno) %>%
summarize(Juridisk.eller.fysisk = first(Juridisk.eller.fysisk),
Ny.ägare.mellan.period.1.och.2 = first(Ny.ägare.mellan.period.1.och.2),
Drivmedel.1 = first(Drivmedel.1),
Drivmedel.2 = first(Drivmedel.2),
C02.Driv.1 = first(C02.Driv.1),
C02.Driv.2 = first(C02.Driv.2),
Ägare.postnr = first(Ägare.postnr),
Ägare.ort = first(Ägare.ort),
Drivmedel = first(Drivmedel),
FuelCat = first(FuelCat),
Ort = first(Ort),
Kommun = first(Kommun),
expgrp = first(expgrp))
# Also create the first long vehicles table (separate rows for each Year)
veh.year.12 <- vehicles %>%
mutate(Year=2012)
veh.year.13 <- vehicles %>%
mutate(Year=2013)
veh.year <- rbind(veh.year.12, veh.year.13)
# relabel experimental group variable
levels(vehicles$expgrp) <- c("Paying in 2012","Exempt in 2012")
levels(veh.year$expgrp) <- c("Paying in 2012","Exempt in 2012")
# Aggregate passages to unique vehicles
pass.trips.2012 <- passages %>%
dplyr::filter(Year == 2012) %>%
group_by(AnonymRegno) %>%
summarize(totalprice.12 = sum(price))
pass.trips.2013 <- passages %>%
dplyr::filter(Year == 2013) %>%
group_by(AnonymRegno) %>%
summarize(totalprice.13 = sum(price))
#Alternatively,...
pass.trips <- passages %>%
group_by(AnonymRegno, Year) %>%
summarize(totalprice = sum(price))
# Merge back into vehicles
vehicles <- vehicles %>%
full_join(pass.trips.2012, by="AnonymRegno")
vehicles <- vehicles %>%
full_join(pass.trips.2013, by="AnonymRegno")
# Alternatively,
veh.year <- veh.year %>%
full_join(pass.trips, by=c("AnonymRegno","Year"))
# Set NAs in total price to zero
vehicles$totalprice.12[is.na(vehicles$totalprice.12)] <- 0
vehicles$totalprice.13[is.na(vehicles$totalprice.13)] <- 0
veh.year$totalprice[is.na(veh.year$totalprice)] <- 0
# Filter out vehicles that are suspect, put OK data in new df
pass.veh <- vehicles %>%
dplyr::filter(!is.na(vehicles$totalprice.12) & # no observed trips in 2012
!is.na(vehicles$totalprice.13) & # no observed trips in 2013
vehicles$Ny.ägare.mellan.period.1.och.2=="Nej" & # not same owner in 2012 and 2013
vehicles$Juridisk.eller.fysisk=="F" & # not privately owned
!is.na(vehicles$Kommun)) # not registered within Stockholm County
# Same for long table
veh.year <- veh.year %>%
dplyr::filter(!is.na(veh.year$totalprice) &
veh.year$Ny.ägare.mellan.period.1.och.2=="Nej" &
veh.year$Juridisk.eller.fysisk=="F" &
!is.na(veh.year$Kommun))
# Compute change in nominal price
pass.veh$totalprice.diff <- pass.veh$totalprice.13 - pass.veh$totalprice.12
# Do some density plots
# Use a common bandwidth adjustment
bw.adjust <- 2
# Nominal price for 2012/2013, using long table
ggplot(veh.year, aes(totalprice, fill=expgrp)) +
geom_density(alpha=0.5, adjust=bw.adjust) +
xlim(0,600) +
theme(legend.position="top") +
facet_wrap( ~ Year, ncol=2) +
labs(fill="Group",
x="Total Nominal Price of Crossings",
y = "Density")
bw.adjust <- 1.5
# 2012 and 2013 nominal price
plot.to.file = FALSE
if(plot.to.file) {svg("tnomprice.byyear.svg", width=7, height=3.5)}
ggplot(veh.year, aes(totalprice, fill=FuelCat)) +
geom_density(alpha=0.5, adjust=bw.adjust) +
xlim(0,600) +
theme(legend.position="top") +
facet_wrap( ~ Year, ncol=2) +
labs(fill="Group",
x="Total Nominal Price of Crossings",
y = "Density")
